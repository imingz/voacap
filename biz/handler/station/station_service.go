// Code generated by hertz generator.

package station

import (
	"context"

	station "voacap/biz/model/station"
	service "voacap/biz/service/station"
	"voacap/pkg/utils"

	"github.com/cloudwego/hertz/pkg/app"
	"github.com/cloudwego/hertz/pkg/protocol/consts"
)

// GetStations .
// @router /stations/getStations [GET]
func GetStations(ctx context.Context, c *app.RequestContext) {
	var err error
	var req station.GetStationsRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		resp := utils.BuildBaseResp(err)
		c.JSON(consts.StatusOK, station.GetStationsResponse{
			Code: resp.StatusCode,
			Msg:  resp.StatusMsg,
		})
		return
	}

	data, err := service.NewStationService(ctx, c).GetStation()

	resp := utils.BuildBaseResp(err)
	c.JSON(consts.StatusOK, station.GetStationsResponse{
		Code: resp.StatusCode,
		Msg:  resp.StatusMsg,
		Data: data,
	})
}

// AddStation .
// @router /stations/addStation [POST]
func AddStation(ctx context.Context, c *app.RequestContext) {
	var err error
	var req station.AddStationRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		resp := utils.BuildBaseResp(err)
		c.JSON(consts.StatusOK, station.AddStationResponse{
			Code: resp.StatusCode,
			Msg:  resp.StatusMsg,
		})
		return
	}

	err = service.NewStationService(ctx, c).AddStation(&req)
	resp := utils.BuildBaseResp(err)
	c.JSON(consts.StatusOK, station.AddStationResponse{
		Code: resp.StatusCode,
		Msg:  resp.StatusMsg,
	})
}

// UpdateStationById .
// @router /stations/updateStationById [POST]
func UpdateStationById(ctx context.Context, c *app.RequestContext) {
	var err error
	var req station.UpdateStationByIdRequest
	err = c.BindAndValidate(&req)
	if err != nil {
		resp := utils.BuildBaseResp(err)
		c.JSON(consts.StatusOK, station.UpdateStationByIdResponse{
			Code: resp.StatusCode,
			Msg:  resp.StatusMsg,
		})
		return
	}

	err = service.NewStationService(ctx, c).UpdateStationById(&req)
	resp := utils.BuildBaseResp(err)
	c.JSON(consts.StatusOK, station.UpdateStationByIdResponse{
		Code: resp.StatusCode,
		Msg:  resp.StatusMsg,
	})
}
